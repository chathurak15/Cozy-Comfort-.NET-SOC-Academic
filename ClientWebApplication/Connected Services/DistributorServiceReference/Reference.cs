//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApplication.DistributorServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DistributorServiceReference.DistributorWebServiceSoap")]
    public interface DistributorWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDistributorInventry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getDistributorInventry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDistributorInventry", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getDistributorInventryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSellerOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getSellerOrder(int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSellerOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getSellerOrderAsync(int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDistributorOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getDistributorOrders(int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDistributorOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getDistributorOrdersAsync(int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateSellerRequestStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateSellerRequestStatus(int requestId, string status, int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateSellerRequestStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateSellerRequestStatusAsync(int requestId, string status, int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkStockAvaialbilty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool checkStockAvaialbilty(int modelId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkStockAvaialbilty", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> checkStockAvaialbiltyAsync(int modelId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addDistributorStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string addDistributorStock(int modelId, int qty, int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addDistributorStock", ReplyAction="*")]
        System.Threading.Tasks.Task<string> addDistributorStockAsync(int modelId, int qty, int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateOrder(int RequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateOrderAsync(int RequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDistributorOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteDistributorOrder(int RequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteDistributorOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteDistributorOrderAsync(int RequestId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DistributorWebServiceSoapChannel : ClientWebApplication.DistributorServiceReference.DistributorWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DistributorWebServiceSoapClient : System.ServiceModel.ClientBase<ClientWebApplication.DistributorServiceReference.DistributorWebServiceSoap>, ClientWebApplication.DistributorServiceReference.DistributorWebServiceSoap {
        
        public DistributorWebServiceSoapClient() {
        }
        
        public DistributorWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DistributorWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet getDistributorInventry() {
            return base.Channel.getDistributorInventry();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getDistributorInventryAsync() {
            return base.Channel.getDistributorInventryAsync();
        }
        
        public System.Data.DataSet getSellerOrder(int distributorId) {
            return base.Channel.getSellerOrder(distributorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getSellerOrderAsync(int distributorId) {
            return base.Channel.getSellerOrderAsync(distributorId);
        }
        
        public System.Data.DataSet getDistributorOrders(int distributorId) {
            return base.Channel.getDistributorOrders(distributorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getDistributorOrdersAsync(int distributorId) {
            return base.Channel.getDistributorOrdersAsync(distributorId);
        }
        
        public string updateSellerRequestStatus(int requestId, string status, int distributorId) {
            return base.Channel.updateSellerRequestStatus(requestId, status, distributorId);
        }
        
        public System.Threading.Tasks.Task<string> updateSellerRequestStatusAsync(int requestId, string status, int distributorId) {
            return base.Channel.updateSellerRequestStatusAsync(requestId, status, distributorId);
        }
        
        public bool checkStockAvaialbilty(int modelId, int qty) {
            return base.Channel.checkStockAvaialbilty(modelId, qty);
        }
        
        public System.Threading.Tasks.Task<bool> checkStockAvaialbiltyAsync(int modelId, int qty) {
            return base.Channel.checkStockAvaialbiltyAsync(modelId, qty);
        }
        
        public string addDistributorStock(int modelId, int qty, int distributorId) {
            return base.Channel.addDistributorStock(modelId, qty, distributorId);
        }
        
        public System.Threading.Tasks.Task<string> addDistributorStockAsync(int modelId, int qty, int distributorId) {
            return base.Channel.addDistributorStockAsync(modelId, qty, distributorId);
        }
        
        public string updateOrder(int RequestId) {
            return base.Channel.updateOrder(RequestId);
        }
        
        public System.Threading.Tasks.Task<string> updateOrderAsync(int RequestId) {
            return base.Channel.updateOrderAsync(RequestId);
        }
        
        public string deleteDistributorOrder(int RequestId) {
            return base.Channel.deleteDistributorOrder(RequestId);
        }
        
        public System.Threading.Tasks.Task<string> deleteDistributorOrderAsync(int RequestId) {
            return base.Channel.deleteDistributorOrderAsync(RequestId);
        }
    }
}
