//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApplication.ManufacturerServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManufacturerServiceReference.ManufacturerWebServiceSoap")]
    public interface ManufacturerWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertBlanketInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertBlanketInfo(string name, string material, int price, string size, string color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertBlanketInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertBlanketInfoAsync(string name, string material, int price, string size, string color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertBlanketStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertBlanketStock(int ManufacturerId, int ModelId, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertBlanketStock", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertBlanketStockAsync(int ManufacturerId, int ModelId, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBlanketName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBlanketNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getBlanketId(string blanketName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlanketId", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getBlanketIdAsync(string blanketName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlankets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBlankets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBlankets", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBlanketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDistributorOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getDistributorOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDistributorOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getDistributorOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcurrentStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getcurrentStock(string modelId, string manufacturerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcurrentStock", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getcurrentStockAsync(string modelId, string manufacturerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateStock(string modelId, string manufacturerId, int newStock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStock", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateStockAsync(string modelId, string manufacturerId, int newStock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteBlanket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteBlanket(string modelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteBlanket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteBlanketAsync(string modelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateDisributorRequestStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateDisributorRequestStatus(int requestId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateDisributorRequestStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateDisributorRequestStatusAsync(int requestId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkManufacturerStockAvailability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool checkManufacturerStockAvailability(int modelId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkManufacturerStockAvailability", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> checkManufacturerStockAvailabilityAsync(int modelId, int qty);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ManufacturerWebServiceSoapChannel : ClientWebApplication.ManufacturerServiceReference.ManufacturerWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManufacturerWebServiceSoapClient : System.ServiceModel.ClientBase<ClientWebApplication.ManufacturerServiceReference.ManufacturerWebServiceSoap>, ClientWebApplication.ManufacturerServiceReference.ManufacturerWebServiceSoap {
        
        public ManufacturerWebServiceSoapClient() {
        }
        
        public ManufacturerWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManufacturerWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManufacturerWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManufacturerWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string insertBlanketInfo(string name, string material, int price, string size, string color) {
            return base.Channel.insertBlanketInfo(name, material, price, size, color);
        }
        
        public System.Threading.Tasks.Task<string> insertBlanketInfoAsync(string name, string material, int price, string size, string color) {
            return base.Channel.insertBlanketInfoAsync(name, material, price, size, color);
        }
        
        public string insertBlanketStock(int ManufacturerId, int ModelId, int stock) {
            return base.Channel.insertBlanketStock(ManufacturerId, ModelId, stock);
        }
        
        public System.Threading.Tasks.Task<string> insertBlanketStockAsync(int ManufacturerId, int ModelId, int stock) {
            return base.Channel.insertBlanketStockAsync(ManufacturerId, ModelId, stock);
        }
        
        public System.Data.DataSet getBlanketName() {
            return base.Channel.getBlanketName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBlanketNameAsync() {
            return base.Channel.getBlanketNameAsync();
        }
        
        public string getBlanketId(string blanketName) {
            return base.Channel.getBlanketId(blanketName);
        }
        
        public System.Threading.Tasks.Task<string> getBlanketIdAsync(string blanketName) {
            return base.Channel.getBlanketIdAsync(blanketName);
        }
        
        public System.Data.DataSet getBlankets() {
            return base.Channel.getBlankets();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBlanketsAsync() {
            return base.Channel.getBlanketsAsync();
        }
        
        public System.Data.DataSet getDistributorOrder() {
            return base.Channel.getDistributorOrder();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getDistributorOrderAsync() {
            return base.Channel.getDistributorOrderAsync();
        }
        
        public string getcurrentStock(string modelId, string manufacturerId) {
            return base.Channel.getcurrentStock(modelId, manufacturerId);
        }
        
        public System.Threading.Tasks.Task<string> getcurrentStockAsync(string modelId, string manufacturerId) {
            return base.Channel.getcurrentStockAsync(modelId, manufacturerId);
        }
        
        public string updateStock(string modelId, string manufacturerId, int newStock) {
            return base.Channel.updateStock(modelId, manufacturerId, newStock);
        }
        
        public System.Threading.Tasks.Task<string> updateStockAsync(string modelId, string manufacturerId, int newStock) {
            return base.Channel.updateStockAsync(modelId, manufacturerId, newStock);
        }
        
        public string deleteBlanket(string modelId) {
            return base.Channel.deleteBlanket(modelId);
        }
        
        public System.Threading.Tasks.Task<string> deleteBlanketAsync(string modelId) {
            return base.Channel.deleteBlanketAsync(modelId);
        }
        
        public string updateDisributorRequestStatus(int requestId, string status) {
            return base.Channel.updateDisributorRequestStatus(requestId, status);
        }
        
        public System.Threading.Tasks.Task<string> updateDisributorRequestStatusAsync(int requestId, string status) {
            return base.Channel.updateDisributorRequestStatusAsync(requestId, status);
        }
        
        public bool checkManufacturerStockAvailability(int modelId, int qty) {
            return base.Channel.checkManufacturerStockAvailability(modelId, qty);
        }
        
        public System.Threading.Tasks.Task<bool> checkManufacturerStockAvailabilityAsync(int modelId, int qty) {
            return base.Channel.checkManufacturerStockAvailabilityAsync(modelId, qty);
        }
    }
}
