//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApplication.SellerServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SellerServiceReference.SellerServiceSoap")]
    public interface SellerServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addCustomerOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string addCustomerOrder(int blanketId, string customerName, string phone, int qty, int sellerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addCustomerOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> addCustomerOrderAsync(int blanketId, string customerName, string phone, int qty, int sellerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSellerInventry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getSellerInventry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSellerInventry", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getSellerInventryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/serachBlanket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet serachBlanket(int modelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/serachBlanket", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> serachBlanketAsync(int modelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCustomerOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCustomerOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSellerDistributorRequests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getSellerDistributorRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSellerDistributorRequests", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getSellerDistributorRequestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addSellerDistributorRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string addSellerDistributorRequest(int sellerId, int distributorId, int modelId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addSellerDistributorRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> addSellerDistributorRequestAsync(int sellerId, int distributorId, int modelId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateSellerOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateSellerOrder(int requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateSellerOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateSellerOrderAsync(int requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteSellerOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteSellerOrder(int requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteSellerOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteSellerOrderAsync(int requestId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SellerServiceSoapChannel : ClientWebApplication.SellerServiceReference.SellerServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SellerServiceSoapClient : System.ServiceModel.ClientBase<ClientWebApplication.SellerServiceReference.SellerServiceSoap>, ClientWebApplication.SellerServiceReference.SellerServiceSoap {
        
        public SellerServiceSoapClient() {
        }
        
        public SellerServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SellerServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SellerServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SellerServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string addCustomerOrder(int blanketId, string customerName, string phone, int qty, int sellerId) {
            return base.Channel.addCustomerOrder(blanketId, customerName, phone, qty, sellerId);
        }
        
        public System.Threading.Tasks.Task<string> addCustomerOrderAsync(int blanketId, string customerName, string phone, int qty, int sellerId) {
            return base.Channel.addCustomerOrderAsync(blanketId, customerName, phone, qty, sellerId);
        }
        
        public System.Data.DataSet getSellerInventry() {
            return base.Channel.getSellerInventry();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getSellerInventryAsync() {
            return base.Channel.getSellerInventryAsync();
        }
        
        public System.Data.DataSet serachBlanket(int modelId) {
            return base.Channel.serachBlanket(modelId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> serachBlanketAsync(int modelId) {
            return base.Channel.serachBlanketAsync(modelId);
        }
        
        public System.Data.DataSet getCustomerOrder() {
            return base.Channel.getCustomerOrder();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCustomerOrderAsync() {
            return base.Channel.getCustomerOrderAsync();
        }
        
        public System.Data.DataSet getSellerDistributorRequests() {
            return base.Channel.getSellerDistributorRequests();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getSellerDistributorRequestsAsync() {
            return base.Channel.getSellerDistributorRequestsAsync();
        }
        
        public string addSellerDistributorRequest(int sellerId, int distributorId, int modelId, int quantity) {
            return base.Channel.addSellerDistributorRequest(sellerId, distributorId, modelId, quantity);
        }
        
        public System.Threading.Tasks.Task<string> addSellerDistributorRequestAsync(int sellerId, int distributorId, int modelId, int quantity) {
            return base.Channel.addSellerDistributorRequestAsync(sellerId, distributorId, modelId, quantity);
        }
        
        public string updateSellerOrder(int requestId) {
            return base.Channel.updateSellerOrder(requestId);
        }
        
        public System.Threading.Tasks.Task<string> updateSellerOrderAsync(int requestId) {
            return base.Channel.updateSellerOrderAsync(requestId);
        }
        
        public string deleteSellerOrder(int requestId) {
            return base.Channel.deleteSellerOrder(requestId);
        }
        
        public System.Threading.Tasks.Task<string> deleteSellerOrderAsync(int requestId) {
            return base.Channel.deleteSellerOrderAsync(requestId);
        }
    }
}
